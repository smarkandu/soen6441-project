@startuml
title Full Architecture Diagram

' Define the major components/modules of the system

rectangle "Phases" {
    [Preload]
    [Postload]
    [Startup]
    [AssignReinforcements]
    [IssueOrder]
    [OrderExecution]
    [Preload] --> [Postload] : next()
    [Postload] --> [Startup] : next()
    [Startup] --> [AssignReinforcements] : assignCountries()
    [AssignReinforcements] --> [IssueOrder]: execute()
    [IssueOrder] --> [IssueOrder]: next() (players left to process)
    [IssueOrder] --> [OrderExecution]: next() (no more players to process)
    [OrderExecution] --> [AssignReinforcements]: execute()
}

rectangle "Context" {
    [CommandLine]
    [CommandLine]-->[Phases]
    rectangle "Map" {
        [Continents]
        [Countries]
    }
    rectangle "Gameplay" {
        [Players]
    }

    rectangle "Players" {
        [Orders]
    }

    [Preload]->[Map]
    [Postload]->[Map]
    [Startup]->[Map]
    [Startup]->[Gameplay]
    [AssignReinforcements]->Gameplay
    [IssueOrder]->[Players]
    [OrderExecution]->[Players]
'
'    [CommandLine]-->[Continents]: Create/Remove
'    [CommandLine]-->[Countries]: Create/Remove
'    [CommandLine]-->[Players]: Create/Remove
'    [CommandLine]-->[Orders]: Add
}

package "External Interactions" {
    (User Input) --> [CommandLine]
}

' External interactions
rectangle "Main" {
    [Main] --> [Context]
}

' Define interaction flow and data flow
'[Gameplay] ..> [Map] : Interacts with map for game state
'[Gameplay] ..> [Context] : Manages game context
'[Map] ..> [Context] : Provides information to the context
'[Phases] ..> [Context] : Updates game state based on phases
@enduml
